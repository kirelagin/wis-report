Основная идея индекса для нечёткого поиска заключается в следующем: построить структуру данных, хранящую пары ключ-значение и быстро возвращающую все
ключевые строки (и, опционально, связанные с ними данные) в окрестности фиксированного размера заданной строки.
В качестве метрики используется обыкновенное расстояние Левенштейна, либо (ограниченное) расстояние Дамерау-Левенштейна[@wiki:damerau].
Структура данных реализована как _FB-trie_ на ключах, а для хранения данных, соответствующих ключу, используется внешняя база данных.


Ограниченное расстояние Дамерау-Левенштейна
--------------------------------------------

_Ограниченное расстояние Дамерау-Левенштейна_ — это редакторское расстояние между двумя словами, включающее операции удаления, вставки, замены, и 
перестановки соседних букв при условии, что запрещены операции, затрагивающие одну и ту же букву более одного раза[@boytsov]. Такая функция, строго говоря, метрикой не 
является (не всегда выполняется неравенство треугольника), но перестановки соседних букв составляют заметную долю от ошибок при вводе с помощью клавиатуры, и,
в отличие от полного расстояния Дамерау-Левенштейна, для ограниченного варианта известны способы эффективного вычисления. В алгоритмах, используемых в данной работе, 
метрические свойства расстояния не используются.

Для вычисления этой функции в нашей реализации используется классический алгоритм динамического программирования, но с сильной оптимизацией средствами битовой арифметики,
и написан с использованием явных объектов состояния алгоритма, что облегчает и ускоряет откат к предыдущему состоянию при переходах вверх по дереву.


FB-trie
--------

_FB-trie (front-back trie)_ — это структура данных, состоящая из двух сжатых префиксных деревьев (trie): одного для ключей и другого для обернутых ключей[@boytsov; @mihov]. 
Она позволяет выполнять поиск ключей в окрестности с использованием техники _meet-in-the-middle_, когда искомое слово делится пополам и обе половины ищутся, 
соответственно, в прямом и обратном префиксных деревьях в окрестностях разных размеров, дающих в сумме размер искомой окрестности.

В нашей реализации данная часть написана на языке C++, деревья создаются и хранятся непосредственно в файлах, отображаемых в память с помощью библиотеки _Boost.Interprocess_.
Это позволяет быстро выполнять операции поиска, даже если индекс целиком не помещается в оперативной памяти. Автоматическое разбиение дерева на несколько файлов фиксированного размера
позволяет работать даже с индексом, не помещающимся в адресное пространство процесса.
